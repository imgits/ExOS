/*
 * Copyright (c) 2014, Thorben Hasenpusch <t.hasenpusch@icloud.com>
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#pragma once

#include "uefi/types.h"

// {0379BE4E-D706-437d-B037-EDB82FB772A4}
constexpr EFI_GUID EFI_DEVICE_PATH_UTILITIES_PROTOCOL_GUID = {
    0x379be4e, 0xd706, 0x437d, 0xb0, 0x37, 0xed, 0xb8, 0x2f, 0xb7, 0x72, 0xa4
};

struct EFI_DEVICE_PATH_PROTOCOL;

using EFI_DEVICE_PATH_UTILS_GET_DEVICE_PATH_SIZE = EFIAPI
UINTN (*)(CONST EFI_DEVICE_PATH_PROTOCOL *DevicePath);

using EFI_DEVICE_PATH_UTILS_DUP_DEVICE_PATH = EFIAPI
    EFI_DEVICE_PATH_PROTOCOL *(*)(CONST EFI_DEVICE_PATH_PROTOCOL *DevicePath);

using EFI_DEVICE_PATH_UTILS_APPEND_PATH = EFIAPI
    EFI_DEVICE_PATH_PROTOCOL *(*)(CONST EFI_DEVICE_PATH_PROTOCOL *Src1,
                                  CONST EFI_DEVICE_PATH_PROTOCOL *Src2);

using EFI_DEVICE_PATH_UTILS_APPEND_NODE = EFIAPI
    EFI_DEVICE_PATH_PROTOCOL *(*)(CONST EFI_DEVICE_PATH_PROTOCOL *DevicePath,
                                  CONST EFI_DEVICE_PATH_PROTOCOL *DeviceNode);

using EFI_DEVICE_PATH_UTILS_APPEND_INSTANCE = EFIAPI EFI_DEVICE_PATH_PROTOCOL *(
    *)(CONST EFI_DEVICE_PATH_PROTOCOL *DevicePath,
       CONST EFI_DEVICE_PATH_PROTOCOL *DevicePathInstance);

using EFI_DEVICE_PATH_UTILS_GET_NEXT_INSTANCE = EFIAPI
    EFI_DEVICE_PATH_PROTOCOL *(*)(EFI_DEVICE_PATH_PROTOCOL **DevicePathInstance,
                                  UINTN *DevicePathInstanceSize);

using EFI_DEVICE_PATH_UTILS_CREATE_NODE = EFIAPI
    EFI_DEVICE_PATH_PROTOCOL *(*)(UINT8 Nodetype, UINT8 NodeSubType,
                                  UINT16 NodeLength);

using EFI_DEVICE_PATH_UTILS_IS_MULTI_INSTANCE = EFIAPI
BOOLEAN (*)(CONST EFI_DEVICE_PATH_PROTOCOL *DevicePath);

struct EFI_DEVICE_PATH_UTILITIES_PROTOCOL
{
    EFI_DEVICE_PATH_UTILS_GET_DEVICE_PATH_SIZE GetDevicePathSize;
    EFI_DEVICE_PATH_UTILS_DUP_DEVICE_PATH DuplicateDevicePath;
    EFI_DEVICE_PATH_UTILS_APPEND_PATH AppendDevicePath;
    EFI_DEVICE_PATH_UTILS_APPEND_NODE AppendDeviceNode;
    EFI_DEVICE_PATH_UTILS_APPEND_INSTANCE AppendDevicePathInstance;
    EFI_DEVICE_PATH_UTILS_GET_NEXT_INSTANCE GetNextDevicePathInstance;
    EFI_DEVICE_PATH_UTILS_IS_MULTI_INSTANCE IsDevicePathMultiInstance;
    EFI_DEVICE_PATH_UTILS_CREATE_NODE CreateDeviceNode;
};
