/*
 * Copyright (c) 2014, Thorben Hasenpusch <t.hasenpusch@icloud.com>
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#pragma once

#include "uefi/types.h"

constexpr EFI_GUID EFI_DRIVER_BINDING_PROTOCOL_GUID = {
    0x18A031AB, 0xB443, 0x4D1A, 0xA5, 0xC0, 0x0C, 0x09, 0x26, 0x1E, 0x9F, 0x71
};

struct EFI_DRIVER_BINDING_PROTOCOL;
struct EFI_DEVICE_PATH_PROTOCOL;

using EFI_DRIVER_BINDING_PROTOCOL_SUPPORTED = EFIAPI
EFI_STATUS (*)(EFI_DRIVER_BINDING_PROTOCOL *This, EFI_HANDLE ControllerHandle,
               EFI_DEVICE_PATH_PROTOCOL *RemainingDevicePath);

using EFI_DRIVER_BINDING_PROTOCOL_START = EFIAPI
EFI_STATUS (*)(EFI_DRIVER_BINDING_PROTOCOL *This, EFI_HANDLE ControllerHandle,
               EFI_DEVICE_PATH_PROTOCOL *RemainingDevicePath);

using EFI_DRIVER_BINDING_PROTOCOL_STOP = EFIAPI
EFI_STATUS (*)(EFI_DRIVER_BINDING_PROTOCOL *This, EFI_HANDLE ControllerHandle,
               UINTN NumberOfChildren, EFI_HANDLE *ChildHandleBuffer);

struct EFI_DRIVER_BINDING_PROTOCOL {
    EFI_DRIVER_BINDING_PROTOCOL_SUPPORTED Supported;
    EFI_DRIVER_BINDING_PROTOCOL_START Start;
    EFI_DRIVER_BINDING_PROTOCOL_STOP Stop;
    UINT32 Version;
    EFI_HANDLE ImageHandle;
    EFI_HANDLE DriverBindingHandle;
};
